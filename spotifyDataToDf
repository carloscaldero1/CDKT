#!/usr/bin/python3
import spotipy
from spotipy.oauth2 import SpotifyClientCredentials
import pandas as pd

client_id = 'cf614c21c9514eacbf313f4fc0824b52'
client_secret = '14a6d270f63940ffaff641572e507917'

client_credentials_manager = SpotifyClientCredentials(client_id, client_secret)
sp = spotipy.Spotify(client_credentials_manager=client_credentials_manager)


def getTrackIDs(user, playlist_id):
    ids = []
    playlist = sp.user_playlist(user, playlist_id)
    for item in playlist['tracks']['items']:
        track = item['track']
        ids.append(track['id'])
    return ids


#ids = getTrackIDs(Username,playlistURL)
#my sample playlist below
ids = getTrackIDs('ooPb2O_bQJ-deWxt9dvy7Q', '0GHWgHTiN2NpVO2uUqugYq')


def getTrackFeatures(id):
    meta = sp.track(id)
    features = sp.audio_features(id)

    # meta
    name = meta['name']
    album = meta['album']['name']
    artist = meta['album']['artists'][0]['name']
    release_date = meta['album']['release_date']
    length = meta['duration_ms']
    popularity = meta['popularity']

    # features
    acousticness = features[0]['acousticness']
    danceability = features[0]['danceability']
    energy = features[0]['energy']
    instrumentalness = features[0]['instrumentalness']
    liveness = features[0]['liveness']
    loudness = features[0]['loudness']
    speechiness = features[0]['speechiness']
    tempo = features[0]['tempo']
    time_signature = features[0]['time_signature']

    track = [
        name, album, artist, release_date, length, popularity, danceability,
        acousticness, danceability, energy, instrumentalness, liveness,
        loudness, speechiness, tempo, time_signature
    ]
    return track

    # loop over track ids


tracks = []
for i in range(len(ids)):
    track = getTrackFeatures(ids[i])
    tracks.append(track)

df = pd.DataFrame(
    tracks,
    columns=[
        'name', 'album', 'artist', 'release_date', 'length', 'popularity',
        'danceability', 'acousticness', 'danceability', 'energy',
        'instrumentalness', 'liveness', 'loudness', 'speechiness', 'tempo',
        'time_signature'
    ])
df.to_csv("spotify.csv", sep=',')

'''
This script appends each track as an array of it's attributes and features to a Data fram and then creates a csv file in the same directory that it runs on with this dataframe.However,It only does the first100 tracks because the spotify api is paginated. I will come up with a script that continues each page until the very end of the playlist. 
'''
